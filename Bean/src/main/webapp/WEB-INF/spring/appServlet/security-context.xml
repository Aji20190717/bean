<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/security
								 http://www.springframework.org/schema/security/spring-security.xsd
								 http://www.springframework.org/schema/beans
								 http://www.springframework.org/schema/beans/spring-beans.xsd
								 http://www.springframework.org/schema/context
								 http://www.springframework.org/schema/context/spring-context-4.3.xsd">
                                 
		<context:component-scan base-package="com.power.security" />
        
        <http auto-config="true" use-expressions="true">
        	
        	<!-- 자원 관련 url -->
        	<intercept-url pattern="/resources/**" access="permitAll" />
        	
       		<!-- main page 관련 url -->
        	<intercept-url pattern="/index.jsp" access="permitAll" />
        	<intercept-url pattern="/header.jsp" access="permitAll" />
        	<intercept-url pattern="/main.do" access="permitAll" />
        	<intercept-url pattern="/mainpage.jsp" access="permitAll" />
        	<intercept-url pattern="/intro.do" access="permitAll" />
        	
        	<!-- 로그인/회원가입 관련 url -->
        	<intercept-url pattern="/loginform.do" access="permitAll" />
			<intercept-url pattern="/registtype.do" access="permitAll" />
			<intercept-url pattern="/resister.do" access="permitAll" />
			<intercept-url pattern="/idChk.do" access="permitAll" />
			<intercept-url pattern="/emailChk.do" access="permitAll" />
			<intercept-url pattern="/registform.do" access="permitAll" />
			<intercept-url pattern="/logininfo.do" access="permitAll" />
			
			<!-- 그외 -->
 <!-- 
            <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
           -->
            <intercept-url pattern="/**" access="permitAll" />
             
            <!--
				auto-config='true' 를 설정한것만으로 기본 로그인페이지/ HTTP 기본인증 / 로그아웃기능 등을 제공한다. 
				use-expressions="true" 는 SpEL 을 사용한다는 의미이다. false의 예 :: hasRole('ROLE_USER') -> ROLE_USER
				intercept-url : 권한은 위쪽이 우선시된다.
					pattern :: 접근하려는 url pattern
					access :: 해당 url에 접근 가능한 권한
					추가로 접근가능한 IP 등을 설정할수도있다.
				permitAll : 모든 권한 허용
				hasRole('ROLE_USER') : 특정 권한 허용
			-->
			
			<form-login login-page="/loginform.do"
					login-processing-url="/logininfo.do"
					default-target-url="/login.do"
					username-parameter="member_id"
					password-parameter="member_pw"
					authentication-failure-url="/login.do?error=1"
					always-use-default-target="true" />
			<!--
				login-page : 사용자가 만든 로그인페이지를 스프링에게 알려준다. 
				login-processing-url : POST /login 디폴트 
				default-target-url : 로그인성공하면 이동할 페이지설정 
				username-parameter / password-parameter : 로그인 폼이 있는 페이지에서 FORM 안에 들어간 name과 동일한 name으로 설정 
				authentication-failure-url : 실패시 호출해줄 URL (login 페이지에 error 파라미터를 보내준다) 
				always-use-default-target : 이거 안하면 로그인성공해도 default-target-url 로 제대로 안간다고 함
			-->
			
			<logout
				invalidate-session="true"
				logout-url="/logoutSecurity.do"
				logout-success-url="/logout.do"
				delete-cookies="true"
			/>
			<!-- 
				invalidate-session : 로그아웃되면 세션 초기화 
				logout-success-url : 로그아웃되면 이동할 페이지 
				logout-url : 로그아웃을 위한 URL설정. 이거 안해주면 디폴트로 POST방식의 /logout 해주면됨.
				delete-cookies : 쿠키 삭제 여부
			-->
			
			<!-- enable csrf protection -->
			<!-- 4.x부터 디폴트로 작용한다. but, 커스텀하면 해줘야 한다. -->
			<csrf disabled="true" />

			<access-denied-handler error-page="/error.do" />

        </http>
        
        <authentication-manager>
            <!-- 
            <authentication-provider>
                <user-service>
                    <user name="user" password="userPw" authorities="ROLE_USER"/>
                    <user name="guest" password="guest" authorities="ROLE_GUEST"/>
                </user-service>
            </authentication-provider>
             -->
             <authentication-provider user-service-ref="securityService">
             	<password-encoder ref="passwordEncoder" />
             </authentication-provider>
        </authentication-manager>
        
        <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> 

</beans:beans>